@page "/VistaNotificaciones"
@inject NotificacionServicio _servicioNotificaciones
@inject UsuarioServicio _servicioUsuario
@inject HubConnection _hubConnection
@inject ServicioMenu _servicioMenu


@if (Notificaciones != null)
{
    if(Notificaciones.Count > 0)
    {
        @foreach(var notificacion in Notificaciones)
        {
            <ItemNotificacion Notificacion="notificacion"/>
        }
    }
    else
    {
        <h3>No tiene notificaciones recibidas aun.</h3>
    }
}
else
{
    <Cargando />
}


@code {
    List<NotificacionDTO> Notificaciones;

    protected async override Task OnInitializedAsync()
    {

        _hubConnection.On<NotificacionDTO>("RecibirNuevaNotificacion", async (notificacion) =>
       {
           var usuarioLogueado = _servicioUsuario.ObtenerUsuarioLogueado();


           if (notificacion.General)
           {
               Actualizar();
           }

       if (notificacion.Equipo != null)
       {
           if (!notificacion.General && notificacion.Equipo.UsuarioId == usuarioLogueado.Id)
           {
               Actualizar();
           }  
       }

           if (!notificacion.General && notificacion.Equipo == null && usuarioLogueado.Rol == Util.Roles.EQUIPO.ToString())
           {
               Actualizar();
           }

       });

        Actualizar();
    }

    private async void Actualizar()
    {
        Notificaciones = await _servicioNotificaciones.ObtenerNotificaciones();
        StateHasChanged();
    }
}

