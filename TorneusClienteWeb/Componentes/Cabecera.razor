@inject ServicioMenu _servicioMenu
@inject UsuarioServicio _usuarioServicio
@inject NavigationManager _nav
@inject ILocalStorageService _localStorage
@inject HubConnection _hubConnection


<div class="myHead">
    @if (_servicioMenu.navegacionPop.BotonAtrasHabilitado)
    {
        <button class="menu-button" @onclick="IrAtras">
            <i class="fas fa-arrow-left size-icon"></i>
        </button>
    }
    else
    {
        <button class="menu-button" @onclick="IrAtras">
            <i class=""></i>
        </button>
    }

    <section class="panel-central">
        <div class="menu-title">
            <span>Hola @_usuarioServicio.ObtenerUsuarioLogueado().Mail</span>
        </div>

        <div class="menu-title">
            <span>@_servicioMenu.Titulo</span>
        </div>
    </section>
    @if (EsUsuarioNoOrganizador())
    {
        @if (_servicioMenu.nuevaNotificacion)
        {
            <button class="menu-button" @onclick="NotificacionLeida">
                <img src="/imagenes/campana.gif" alt="Campana" class="imgCampana" />
            </button>
        }
        else
        {
            <button class="menu-button" @onclick="NotificacionLeida">
                <i class="fas fa-bell size-icon"></i>
            </button>
        }

    }
    else
    {
        <button class="menu-button">
            <i class="fas fa-volleyball-ball"></i>
        </button>
    }

</div>



@code {
    private string Titulo = "";

    protected async override Task OnInitializedAsync()
    {
        _servicioMenu.OnActualizarMenu += Actualizar;

        _hubConnection.On<NotificacionDTO>("RecibirNuevaNotificacion", async (notificacion) =>
        {
            var usuarioLogueado = _usuarioServicio.ObtenerUsuarioLogueado();


            if (notificacion.General)
            {
                _servicioMenu.NuevaNotificacionIcono();
            }

            if (notificacion.Equipo != null)
            {
                if (!notificacion.General && notificacion.Equipo.UsuarioId == usuarioLogueado.Id)
                {
                    _servicioMenu.NuevaNotificacionIcono();
                }
            }

            if (!notificacion.General && notificacion.Equipo == null && usuarioLogueado.Rol == Util.Roles.EQUIPO.ToString())
            {
                _servicioMenu.NuevaNotificacionIcono();
            }
        });

    }

    private async void IrAtras()
    {
        if (_servicioMenu.navegacionPop.EsPaginaPrincipal)
        {
            await _localStorage.RemoveItemAsync(Util.TOKEN_LOCAL);
            _nav.NavigateTo(_servicioMenu.navegacionPop.AccionIrAtrasUrl, true);
        }
        else
        {
            _nav.NavigateTo(_servicioMenu.navegacionPop.AccionIrAtrasUrl);
        }

    }

    private void Actualizar()
    {
        StateHasChanged();
    }

    private async Task NotificacionLeida()
    {
        _servicioMenu.nuevaNotificacion = false;
        _nav.NavigateTo("/VistaNotificaciones");
    }

    private bool EsUsuarioNoOrganizador()
    {
        return _usuarioServicio.ObtenerUsuarioLogueado().Rol != Util.Roles.ORGANIZADOR.ToString();
    }
}
