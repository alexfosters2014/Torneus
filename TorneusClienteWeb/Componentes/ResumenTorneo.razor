@inject FixtureServicio _servicioFixture
@inject IConfiguration _config


@if (puestos != null)
{

<section class="card-resumen">

        <div class="flex-resumen">
            <table class="tablaPuestos">
                <tr>    
                    <td></td>
                    <td class="tamanioMedioRem borde-abajo">
                        <article>
                            <img src="@VerLogoURL(puestos.Ganador.Logo)" alt="">
                            <p>@puestos.Ganador.Nombre</p>
                        </article>
                    </td>
                </tr> 
                <tr>
                    <td></td>
                    <td class="borde-izq altura-podio tamanioGrandeRem" style="width: 50%;">
                        <img src="imagenes/campana.gif" alt="" class="campana-chica">
                        1ro
                     </td>
                    <td class="tamanioMedioRem borde-izq borde-abajo">
                        <article>
                            <img src="@VerLogoURL(puestos.SegundoPuesto.Logo)" alt="">
                            <p>@puestos.SegundoPuesto.Nombre</p>
                        </article>
                    </td>
                </tr>
                <tr>
                    <td></td>
                    <td class="borde-izq"> </td>
                    <td class="borde-der altura-podio tamanioGrandeRem" style="width: 50%;">2do</td>
                </tr>
            </table>
        </div>
    

        <div class="centrarTexto">
            <p class="titulo-Info">Cantidad de equipos que participaron</p>
            <p class="tamanioGrandeRem titulo-bold">@cantidadEquipoParticipantes</p>
        </div>


        <div class="centrarTexto">
            <p class="titulo-Info">Cantidad partidos jugados</p>
            <p class="tamanioGrandeRem titulo-bold">@cantidadPartidosJugados</p>
        </div>


        <div class="centrarTexto">
            <p class="titulo-Info">Tiempo promedio por partido </p>
            <p class="tamanioGrandeRem titulo-bold">@tiempoPromedio min</p>
        </div>


        
        <div class="flex-resumen">                                                           
            <p class="titulo-Info">Puntaje totales de equipos</p>
            <table class="table table-bordered border-primary">
                <tr>
                    <td>Equipos</td>
                    <td>Puntaje</td>
                </tr>

            @foreach (var puntajeEquipo in puntajePorEquipo)
            {
                 <tr>
                    <td>@puntajeEquipo.Key</td>
                    <td>@puntajeEquipo.Value</td>
                 </tr>
            }

            </table>
        </div>


    </section>

}




@code {
    private int cantidadPartidosJugados = 0;
    private int cantidadEquipoParticipantes = 0;
    private int tiempoPromedio = 0;
    private string baseUrlImagen = "";
    Dictionary<string, int> puntajePorEquipo = new();
    PrimerSegundoPuestoModel puestos = new(); 


    protected async override Task OnInitializedAsync()
    {
        await CargarDetalles();
    }

    private async Task CargarDetalles()
    {
        baseUrlImagen = _config["UrlBaseParaImagenes"];
        cantidadPartidosJugados = await _servicioFixture.CantidadPartidosJugados();
        cantidadEquipoParticipantes = await _servicioFixture.CantidadEquiposParticipantes();
        tiempoPromedio = _servicioFixture.TiempoPromedioMinutos;
        puntajePorEquipo = await _servicioFixture.PuntajePorEquipo();
        puestos = await _servicioFixture.PrimerSegundoPuesto();

    }

    private string VerLogoURL(string logoEquipoRuta)
    {
        string rutaImagen = $"{baseUrlImagen}{logoEquipoRuta}";
        return rutaImagen;
    }

}
